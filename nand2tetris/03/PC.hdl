// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
*/

CHIP PC {
    IN in[16], reset, load, inc;
    OUT out[16];
    
    PARTS:
    //// Replace this comment with your code.
	// register should have two out pins
	// the outnext goes into the in of the next time step.
	Register(in=outMux, load=loadall, out=out, out=outnext);
	Inc16(in=outnext, out=outinc);
	
	Mux16(a=outnext, b=outinc, sel=inc, out=aa);
	Mux16(a=aa, b=in, sel=load, out=bb);
	Mux16(a=bb, b=false, sel=reset, out=outMux);

	// My initial thought was that the load for the register should be Muxed.
	// But Or works as the Mux above already is selected based on the load values.
	Or(a=reset, b=load, out=loadtemp);
	Or(a=loadtemp, b=inc, out=loadall);
	
}